
trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: static_scans
    displayName: Static Code Scan
    jobs: 
      - job: StaticScan
        displayName: Static Code Scan
        steps:
          - task: NodeTool@0
            displayName: "Compiling Angular"
          - script: 
              #npm install -g @angular/cli
              npm install
              ng lint

  - stage: Compile
    displayName: Build
    jobs: 
      - job: Build
        displayName: Build Angular
        steps:
          - task: NodeTool@0
            displayName: "Compiling Angular"
          - script: |
              npm install -g @angular/cli@6.3.8
              npm install
          - task: CopyFiles@2
            displayName: "Copy Terraform"
            inputs:
              SourceFolder: "./dist"
              TargetFolder: '$(Build.ArtifactStagingDirectory)/angular'
          - task: CopyFiles@2
            displayName: "Copy Provision"
            inputs:
              SourceFolder: "./provision"
              TargetFolder: '$(Build.ArtifactStagingDirectory)/angular'
          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact: angular'
            inputs:
              ArtifactName: angular
              PathtoPublish: $(Build.ArtifactStagingDirectory)/angular
              publishLocation: Container
      - job: TerraForm
        displayName: Build Teraform
        steps:
          - task: CopyFiles@2
            displayName: "Copy Terraform"
            inputs:
              SourceFolder: "./provision"
              TargetFolder: '$(Build.ArtifactStagingDirectory)/provision'
          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact: provision'
            inputs:
              ArtifactName: provision
              PathtoPublish: $(Build.ArtifactStagingDirectory)/provision
              publishLocation: Container
      - job: TSpector
        displayName: Build TSpector
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '10.x'
            displayName: 'Install Node.js'
          - script: |
              npm install
            displayName: 'npm install and build'
          - task: CopyFiles@2
            displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
            inputs:
              SourceFolder: "./e2e"
              TargetFolder: '$(Build.ArtifactStagingDirectory)/e2e/'
          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact: TSpector'
            inputs:
              ArtifactName: e2e
              PathtoPublish: $(Build.ArtifactStagingDirectory)/e2e
              publishLocation: Container

  - stage: UnitTests
    displayName: Unit Tests
    jobs: 
      - job: Provision
        displayName: Angular Unit Tests
        steps:
          - task: DownloadBuildArtifacts@0
            displayName: Get Angular unit test Artifacts
            inputs:
              artifactName: angular
              project: Terraform_Ansible
              pipeline: aconite-in.Atlas
              buildVersionToDownload: latest
          - task: Bash@3
            displayName: "Install Chrome"
            inputs:
              targetType: 'inline'
              script: |
                wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb; 
                sudo dpkg -i --force-depends google-chrome-stable_current_amd64.deb; 
                sudo apt-get install -f -y
          - task: NodeTool@0
            inputs:
              versionSpec: '10.x'
            displayName: 'Install Node.js'
          - script: |
              npm install
              npm run test-headless
            displayName: 'Angular Unit Test Execution'
            workingDirectory: "."

## This should inc
  - stage: Provision_Environment
    displayName: Prov Env & Deploy
    jobs: 
      - job: Provision
        displayName: Provision_Environment
        steps:
          - task: DownloadBuildArtifacts@0
            displayName: Get TerraForm Artifacts
            inputs:
              artifactName: angular
              project: Terraform_Ansible
              pipeline: aconite-in.Atlas
              buildVersionToDownload: latest
          - task: Bash@3
            displayName: 'Bash Script'
            inputs:
              targetType: filePath
              filePath: './provision/provision.sh'
              arguments: '$(ARM_CLIENT_ID) $(ARM_CLIENT_SECRET) $(ARM_SUBSCRIPTION_ID) $(ARM_TENANT_ID)'
              workingDirectory: './provision'
              
          - task: ms-vscs-rm.vss-services-ansible.ansible-task.Ansible@0
            displayName: 'Run playbook'
            inputs:
              playbookPathOnAgentMachine: '$(System.DefaultWorkingDirectory)/provision/webservers.yml'
              inventoriesAgentMachine: file
              inventoryFileOnAgentMachine: '$(System.DefaultWorkingDirectory)/provision/inventory'
              args: '--ssh-common-args="-o StrictHostKeyChecking=no"'
              failOnStdErr: false

## This shoudl include API test and smoke tests
  - stage: ReadinessTests
    displayName: Environment Readiness 
    jobs: 
      - job: PingTest
        displayName: Ping Test
        steps:
          - task: Bash@3
            displayName: Ping Test
            inputs:
              targetType: 'inline'
              script: /usr/bin/wget $(currentVMIP) --timeout 30 -O - 2>/dev/null | grep "Normal operation string" || echo "The site is down";
              failOnStderr: false
              # exit 125
      - job: Mock_API
        dependsOn: PingTest
        displayName: Mock API
        steps:
          - task: DownloadBuildArtifacts@0
            displayName: Get TSpector Artifacts
            inputs:
              artifactName: e2e
              project: Terraform_Ansible
              pipeline: aconite-in.Atlas
              buildVersionToDownload: latest
          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb; 
                sudo dpkg -i --force-depends google-chrome-stable_current_amd64.deb; 
                sudo apt-get install -f -y
                cd e2e
                wget https://chromedriver.storage.googleapis.com/79.0.3945.36/chromedriver_linux64.zip
                unzip chromedriver_linux64.zip
          - task: NodeTool@0
            inputs:
              versionSpec: '10.x'
            displayName: 'Install Node.js'
          - script: |
              npm install
              npm run tsc
              npm run test -- --cucumberOpts.tags=@mocky --chromeDriver=$(System.DefaultWorkingDirectory)/e2e/chromedriver
            displayName: 'npm install and build'
            workingDirectory: "./e2e/"
      
      - job: Connex_API
        dependsOn: PingTest
        displayName: Connex API
        steps:
          - task: DownloadBuildArtifacts@0
            displayName: Get TSpector Artifacts
            inputs:
              artifactName: e2e
              project: Terraform_Ansible
              pipeline: aconite-in.Atlas
              buildVersionToDownload: latest
          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb; 
                sudo dpkg -i --force-depends google-chrome-stable_current_amd64.deb; 
                sudo apt-get install -f -y
                cd e2e
                wget https://chromedriver.storage.googleapis.com/79.0.3945.36/chromedriver_linux64.zip
                unzip chromedriver_linux64.zip
                ls
          - task: NodeTool@0
            inputs:
              versionSpec: '10.x'
            displayName: 'Install Node.js'
          - script: |
              npm install
              npm run tsc
              npm run test -- --cucumberOpts.tags=@DAPI --chromeDriver=$(System.DefaultWorkingDirectory)/e2e/chromedriver
            displayName: 'npm install and build'
            workingDirectory: "./e2e/"

## should include the UI test subset
      - job: SmokeTest
        dependsOn: PingTest
        displayName: Smoke Test
        steps:
          - task: DownloadBuildArtifacts@0
            displayName: Get TSpector Artifacts
            inputs:
              artifactName: e2e
              project: Terraform_Ansible
              pipeline: aconite-in.Atlas
              buildVersionToDownload: latest
          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb; 
                sudo dpkg -i --force-depends google-chrome-stable_current_amd64.deb; 
                sudo apt-get install -f -y
                cd e2e
                wget https://chromedriver.storage.googleapis.com/79.0.3945.36/chromedriver_linux64.zip
                unzip chromedriver_linux64.zip
                ls
          - task: NodeTool@0
            inputs:
              versionSpec: '10.x'
            displayName: 'Install Node.js'
          - script: |
              npm install
              npm run tsc
              npm run test -- --cucumberOpts.tags=@e2e --appURL=http://$(currentVMIP)/ --chromeDriver=$(System.DefaultWorkingDirectory)/e2e/chromedriver
            displayName: 'npm install and build'
            workingDirectory: "./e2e/"

# ## Just a place holder
#   - stage: E2E
#     displayName: End to End QA Test
#     jobs: 
#       - job: Provision
#         displayName: e2e
#         steps:
#           - task: DownloadBuildArtifacts@0
#             displayName: Get TSpector Artifacts
#             inputs:
#               artifactName: TSpector
#               project: Terraform_Ansible
#               pipeline: aconite-in.Atlas
#               buildVersionToDownload: latest
#           - task: Bash@3
#             inputs:
#               targetType: 'inline'
#               script: 'echo ''QA Test'''
