
trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: static_scans
    displayName: Static Code Scan
    jobs: 
      - job: StaticScan
        displayName: Static Code Scan
        steps:
          - task: NodeTool@0
            displayName: "Compiling Angular"
          - script:
              # npm install -g @angular/cli
              npm install
              ng lint
      - job: Dependentjob
        displayName: dependent job
        dependsOn: StaticScan
        steps:
          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: 'echo ''QA Test'''

  - stage: Compile
    displayName: Build Stage
    jobs: 
      - job: Build
        displayName: Build Angular
        steps:
          - task: NodeTool@0
            displayName: "Compiling Angular"
          - script: |
              npm install -g @angular/cli@6.3.8
              npm install
          - task: CopyFiles@2
            displayName: "Copy Terraform"
            inputs:
              SourceFolder: "."
              TargetFolder: '$(Build.ArtifactStagingDirectory)/angular'
          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact: angular'
            inputs:
              ArtifactName: angular
              PathtoPublish: $(Build.ArtifactStagingDirectory)/angular
              publishLocation: Container
      - job: TerraForm
        displayName: Artifact Teraform
        steps:
          - task: CopyFiles@2
            displayName: "Copy Terraform"
            inputs:
              SourceFolder: "./provision"
              TargetFolder: '$(Build.ArtifactStagingDirectory)/provision'
          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact: provision'
            inputs:
              ArtifactName: provision
              PathtoPublish: $(Build.ArtifactStagingDirectory)/provision
              publishLocation: Container
      - job: TSpector
        displayName: TSpector Build
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '10.x'
            displayName: 'Install Node.js'
          - script: |
              npm install
            displayName: 'npm install and build'
          - task: CopyFiles@2
            displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
            inputs:
              SourceFolder: "./e2e"
              TargetFolder: '$(Build.ArtifactStagingDirectory)/e2e'
          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact: TSpector'
            inputs:
              ArtifactName: e2e
              PathtoPublish: $(Build.ArtifactStagingDirectory)/e2e
              publishLocation: Container

  - stage: UnitTests
    displayName: Unit Test
    jobs: 
      - job: Provision
        displayName: UnitTests
        steps:
          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: 'echo ''Unit Tests Stage'''

## This should inc
  - stage: Provision_Environment
    displayName: Prov Env & Deploy
    jobs: 
      - job: Provision
        displayName: Provision_Environment
        steps:
          - task: DownloadBuildArtifacts@0
            displayName: Get TerraForm Artifacts
            inputs:
              artifactName: angular
              project: Terraform_Ansible
              pipeline: aconite-in.Atlas
              buildVersionToDownload: latest
          - task: Bash@3
            displayName: 'Bash Script'
            inputs:
              targetType: filePath
              filePath: './provision/provision.sh'
              arguments: '$(ARM_CLIENT_ID) $(ARM_CLIENT_SECRET) $(ARM_SUBSCRIPTION_ID) $(ARM_TENANT_ID)'
              workingDirectory: './provision'

## This shoudl include API test and smoke tests
  - stage: ReadinessTests
    displayName: Environment Readiness 
    jobs: 
      - job: APITest
        displayName: API Test
        steps:
          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: 'echo ''API Test'''

## should include the UI test subset
      - job: SmokeTest
        displayName: Smoke Test
        steps:
          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: 'echo ''Smoke Test Stage'''

## Just a place holder
  - stage: E2E
    displayName: End to End QA Test
    jobs: 
      - job: Provision
        displayName: e2e
        steps:
          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: 'echo ''QA Test'''
